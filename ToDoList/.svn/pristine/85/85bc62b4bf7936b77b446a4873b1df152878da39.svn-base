package com.todolist.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.config.annotation.web.servlet.configuration.EnableWebMvcSecurity;
import org.springframework.security.core.userdetails.UserDetailsService;

@Configuration
@EnableWebMvcSecurity
@ComponentScan(basePackages = { "com.todolist" })
public class WebSecurityConfig extends WebSecurityConfigurerAdapter {
	// Since MultiSecurityConfig does not extend
	// GlobalMethodSecurityConfiguration and
	// define an AuthenticationManager, it will try using the globally defined
	// AuthenticationManagerBuilder to create one

	@Autowired
	private UserDetailsService userDetailsService;

	@Autowired
	public void configureGlobal(AuthenticationManagerBuilder auth)
			throws Exception {
		DaoAuthenticationProvider daoAuthenticationProvider = new DaoAuthenticationProvider();
		daoAuthenticationProvider.setUserDetailsService(userDetailsService);
		auth.inMemoryAuthentication().withUser("username").password("password").authorities("ROLE_ADMIN");
	}

	protected void configure(HttpSecurity http) throws Exception {
		http.authorizeRequests().antMatchers("/resources**").permitAll().and().authorizeRequests().anyRequest().authenticated()
        .and().formLogin().loginPage("/login").passwordParameter("j_password").usernameParameter("j_username").permitAll();
	}

}
